package com.appsmith.server.domains;

import com.appsmith.external.models.BaseDomain;
import com.appsmith.external.views.Views;
import com.appsmith.server.constants.Url;
import com.fasterxml.jackson.annotation.JsonView;
import com.vladmihalcea.hibernate.type.json.JsonBinaryType;
import jakarta.persistence.*;
import jakarta.validation.constraints.NotBlank;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;
import org.hibernate.annotations.Type;

import java.util.Set;

@Getter
@Setter
@ToString
@NoArgsConstructor
@Entity
public class Workspace extends BaseDomain {

    @JsonView(Views.Public.class)
    private String domain;

    @NotBlank(message = "Name is mandatory")
    @JsonView(Views.Public.class)
    private String name;

    @JsonView(Views.Public.class)
    private String website;

    @JsonView(Views.Public.class)
    private String email;

    @OneToMany(
            mappedBy = "workspace",
            cascade = {CascadeType.ALL},
            orphanRemoval = true)
    @JsonView(Views.Public.class)
    @ToString.Exclude
    private Set<WorkspacePlugin> plugins;

    @JsonView(Views.Public.class)
    private String slug;

    @JsonView(Views.Public.class)
    private Boolean isAutoGeneratedWorkspace;

    @Column(name = "logo_asset_id", insertable = false, updatable = false)
    @JsonView(Views.Public.class)
    String logoAssetId;

    @JoinColumn(name = "logo_asset_id", referencedColumnName = "id")
    @OneToOne
    @JsonView(Views.Internal.class)
    private Asset logoAsset;

    @JsonView(Views.Public.class)
    private String tenantId;

    @JsonView(Views.Internal.class)
    private Boolean hasEnvironments;

    @Type(JsonBinaryType.class)
    @Column(columnDefinition = "jsonb")
    @JsonView(Views.Internal.class)
    private Set<String> defaultPermissionGroups;

    public String makeSlug() {
        return toSlug(name);
    }

    public static String toSlug(String text) {
        return text == null ? null : text.replaceAll("[^\\w\\d]+", "-").toLowerCase();
    }

    @JsonView(Views.Public.class)
    public String getLogoUrl() {
        return Url.ASSET_URL + "/" + logoAsset.getId();
    }
}
