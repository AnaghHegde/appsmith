# yaml-language-server: $schema=https://coderabbit.ai/integrations/schema.v2.json
language: "en-US"
early_access: false
tone_instructions: 'You must talk like teacher.'
reviews:
  profile: "chill"
  request_changes_workflow: false
  high_level_summary: true
  poem: true
  review_status: true
  collapse_walkthrough: false
  auto_review:
    enabled: true
    drafts: false
  path_instructions:
    - path: "app/client/cypress/**/**.*"
      instructions: |
        Review the following e2e test code written using the Cypress test library. Ensure that:
        - Follow best practices for Cypress code and e2e automation. 
        - Avoid using cy.wait in code.
        - Avoid using cy.pause in code.
        - Avoid using agHelper.sleep().
        - Use locator variables for locators and do not use plain strings.
        - Use data-* attributes for selectors.
        - Avoid Xpaths, Attributes and CSS path.
        - Avoid selectors like .btn.submit or button[type=submit].
        - Perform logins via API with LoginFromAPI.
        - Perform logout via API with LogOutviaAPI.
        - Perform signup via API with SignupFromAPI.
        - Avoid using it.only.
        - Avoid using after and aftereach in test cases.
        - Use multiple assertions for expect statements.
        - Avoid using strings for assertions.
        - Do not use duplicate filenames even with different paths.
        - Avoid using agHelper.Sleep, this.Sleep in any file in code.
        - Do not use any function from this file app/client/cypress/support/ApiCommands.js instead of this use same or nearly same method from this file app/client/cypress/support/Pages/ApiPage.ts
        - Use `apiPage.ResponseStatusCheck` instead of `ResponseStatusCheck`.
        - Use `apiPage.CreateApi` instead of `CreateAPI`.
        - Use `RenameEntityFromExplorer` instead of `EditApiNameFromExplorer`.
        - Use `apiPage.RunAPI` instead of `RunAPI`.
        - Use `apiPage.EnterURL` instead of `enterUrl`.
        - Use `entityExplorer.ActionContextMenuByEntityName` instead of `DeleteWidgetFromSideBar`.
        - Use `apiPage.CreateAndFillApi` instead of `createAndFillApi`.
        - Use `dataSources.NavigateToDSCreateNew` instead of `NavigateToDatasourceEditor`.
        - Use `dataSources.TestDatasource` instead of `testDatasource`.
        - Use `dataSources.SaveDatasource` instead of `saveDatasource`.
        - Use `dataSources.TestSaveDatasource` instead of `testSaveDatasource`.
        - Use `dataSources.FillPostgresDSForm` instead of `fillPostgresDatasourceForm`.
        - Use `dataSources.FillElasticSearchDSForm` instead of `fillElasticDatasourceForm`.
        - Use `dataSources.FillMySqlDSForm` instead of `fillMySQLDatasourceForm`.
        - Use `dataSources.FillMsSqlDSForm` instead of `fillMsSQLDatasourceForm`.
        - Use `dataSources.FillArangoDSForm` instead of `fillArangoDBDatasourceForm`.
        - Use `dataSources.CreateDataSource` instead of `createPostgresDatasource`.
        - Use `dataSources.DeleteDatasourceFromWithinDS` instead of `deleteDatasource`.
        - Use `agHelper.RenameWithInPane` instead of `renameDatasource`.
        - Use `dataSources.CreateDataSource` instead of `fillAmazonS3DatasourceForm`.
        - Use `gitSync.CreateGitBranch` instead of `createGitBranch`.
        - Use `gitSync.SwitchGitBranch` instead of `switchGitBranch`.
        - Use `gitSync.CommitAndPush` instead of `commitAndPush`.
        - Use `gitSync.CheckMergeConflicts` instead of `merge`.
        - Use `gitSync.ImportAppFromGit` instead of `importAppFromGit`.
        - Use `gitSync.DiscardChanges` instead of `gitDiscardChanges`.
        - Use `dataSources.GeneratePageForDS` instead of `NavigateToDSGeneratePage`.
        - Use `dataSources.FillAuthAPIUrl` instead of `fillAuthenticatedAPIForm`.
        - Use `dataSources.RunQuery` instead of `runQuery`.
        - Use `dataSources.RunQuery` instead of `onlyQueryRun`.
        - Use `dataSources.DeleteQuery` instead of `deleteQueryUsingContext`.
        - Use `apiPage.ValidateQueryParams` instead of `ValidateQueryParams`.
        - Use `agHelper.SelectFromDropDown` instead of `TargetDropdownAndSelectOption` or `ValidateAndSelectDropdownOption`.
        - Use `propPane.SetZoomLevel` instead of `changeZoomLevel`.
        - Use `table.ChangeColumnType` instead of `changeColumnType`.
        - Use `agHelper.SelectDropDown` instead of `selectDropdownValue` or `SelectDropDown`.
        - Use `propPane.CreateModal` instead of `AddActionWithModal`.
        - Use `agHelper.CheckUncheck` instead of `CheckWidgetProperties` or `UncheckWidgetProperties`.
        - Use `propPane.RenameWidget` instead of `widgetText` or `verifyUpdatedWidgetName`.
        - Use `agHelper.ReturnCodeInputValue` instead of `getCodeInput`.
        - Use `agHelper.UpdateCodeInput` instead of `updateCodeInput`.
        - Use `agHelper.FocusCodeInput` instead of `focusCodeInput`.
        - Use `propPane.SelectColorFromColorPicker` instead of `selectColor`.
        - Use `propPane.NavigateBackToPropertyPane` instead of `backFromPropertyPanel`.
        - Use `table.EnableVisibilityOfColumn` instead of `hideColumn`, `showColumn`, or `makeColumnVisible`.
        - Use `table.DeleteColumn` instead of `deleteColumn` or `deleteJSONFormField`.
        - Use `table.EditColumn` instead of `openFieldConfiguration` or `editColumn`.
        - Use `table.AddColumn` instead of `addColumn` or `addColumnV2`.
        - Use `agHelper.VerifyEvaluatedErrorMessage` instead of `evaluateErrorMessage`.
        - Use `propPane.SelectPlatformFunction('onClick', 'Reset Widget')` instead of `selectResetWidget`.
        - Use `propPane.CopyPasteWidgetFromPropertyPane` instead of `copyWidget`.
        - Use `propPane.DeleteWidgetDirectlyFromPropertyPane` instead of `deleteWidget`.
        - Use `table.ReadTableRowColumnData` instead of `readTabledata`, `readTableV2data`, `readTabledataPublish`, or `readTableV2dataPublish`.
        - Use `agHelper.ValidateToastMessage` instead of `validateToastMessage` or `VerifyErrorMsgPresence`.
        - Use `agHelper.EnableAllCodeEditors` instead of `EnableAllCodeEditors`.
        - Use `table.ClickOnEditIcon` instead of `editTableCell`.
        - Use `table.EnableEditableOfColumn` instead of `makeColumnEditable`.
        - Use `table.EditTableCell` instead of `enterTableCellValue`.
        - Use `propPane.MoveToTab` instead of `moveToStyleTab` or `moveToContentTab`.
        - Use `table.SortColumn` instead of `sortColumn`.
        - Use `homePage.CreateNewWorkspace` instead of `createWorkspace`.
        - Use `homePage.CreateAppInWorkspace` instead of `CreateAppForWorkspace`.
        - Use `homePage.LogOutviaAPI` instead of `LogOut`.
        - Use `agHelper.AddDsl` instead of `addDsl`.
        - Use `jsEditor.NavigateToNewJSEditor` instead of `NavigateToJSEditor`.
        - Use `entityExplorer.DragNDropWidget` instead of `dragAndDropToCanvas`.
        - Use `agHelper.ValidateCodeEditorContent` instead of `validateCodeEditorContent`.
        - Use `agHelper.WaitUntilToastDisappear` instead of `VerifyErrorMsgAbsence`.
        - Use `agHelper.SelectDropDown` instead of `SelectDropDown`.
        - Use `agHelper.RemoveMultiSelectItems` instead of `RemoveAllSelections`.
        - Use `agHelper.SelectFromMultiSelect` instead of `SelectFromMultiSelect`.
        - Use `onboarding.skipSignposting` instead of `skipSignposting`.
        - Use `agHelper.AssertTooltip` instead of `assertTooltipPresence`.
        - Use `jsEditor.CreateJSObject` instead of `createJSObject`.
        - Use `PageLeftPane.expandCollapseItem` instead of `CheckAndUnfoldEntityItem`.
chat:
  auto_reply: true